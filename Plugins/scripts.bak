;無変換+Shift+R→現在のマウス座標を記録
;無変換+Shift+C→記録したマウス座標を左クリック
  vk1D & r::
  If (GetKeyState("Shift", "P")) {
    CoordMode, Mouse, Screen
    MouseGetPos, mouseX, mouseY
  }Else{
    ;Numpad9はここに移動
    Send, {Numpad9}
  }
  Return

  vk1D & c::
  If (GetKeyState("Shift", "P")) {
    ;記録した座標をクリック後、元の座標に戻る
    CoordMode, Mouse, Screen
    MouseGetPos, tempX, tempY
    MouseClick, Left, mouseX, mouseY
    MouseMove, tempX, tempY
  }Else{
    ;Numpad2はここに移動
    Send, {Numpad2}
  }
  Return


;Alt+左ドラッグ→ウィンドウ内ドラッグでウィンドウ移動
!LButton::
  CoordMode,Mouse,Screen
  MouseGetPos,sx,sy,mh
  WinGetPos,wx,wy,,,ahk_id %mh%
  SetWinDelay, 1
  while(GetKeyState("LButton","P"))
  {
    MouseGetPos,mx,my
    WinMove,ahk_id %mh%,,wx-(sx-mx),wy-(sy-my)
  }
Return


; ディレクトリが格納された変数current_dirのファイル数の変化を検知し次第、ループを抜けるやつ
while (1) {
  num++  ; Loop回数
  cnt := ComObjCreate("Scripting.FileSystemObject").GetFolder(current_dir).Files.Count
  tmp := cnt

  ; 1回目はファイル数カウント初回であるため、cnt==0だからスキップしないと必ずcnt!=tmpとなってしまう。
  ; そのためLoop回数を記録するnum変数を上で用意した。
  If (cnt != tmp || num != 1)
    break

  ; msgbox, NG %num%
}


; メニュー
  ; サブメニュー生成
  Menu, MySubMenu, Add, スクリプトフォルダを開く, SubMenu0
  Menu, MySubMenu, Add
  Menu, MySubMenu, Add, 雑多.ahk, SubMenu1

  ; Scriptsメニュー内にMySubMenuの項目を登録
  Menu, Tray, Add, Scripts, :MySubMenu

  ; ここまではAuto-executeセクションに配置
  Return

  ; メニュー用サブルーチン
  SubMenu0:
    Run, %A_ScriptDir%\
  Return
  SubMenu1:
    Run, %A_ScriptDir%\Scripts\雑多.ahk
  Return

  ; ////////toggle.ahk
  vk1C::Send, {vk1C}

/*OBS Ctrl + Numpad--------------------
---------------------------------------
---------------------------------------
*/
#If, WinActive("ahk_exe obs64.exe")

;Numpad0::tenkeyHotkey("obs64" ,"+!#0") ;Duplicate??

Numpad1::tenkeyHotkey("obs64" ,"+!#1")

Numpad2::tenkeyHotkey("obs64" ,"+!#2")

Numpad3::tenkeyHotkey("obs64" ,"+!#3")

Numpad4::tenkeyHotkey("obs64" ,"+!#4")

Numpad5::tenkeyHotkey("obs64" ,"+!#5")

Numpad6::tenkeyHotkey("obs64" ,"+!#6")

Numpad7::tenkeyHotkey("obs64" ,"+!#7")

Numpad8::tenkeyHotkey("obs64" ,"+!#8")

Numpad9::tenkeyHotkey("obs64" ,"+!#9")

NumpadDot::tenkeyHotkey("obs64" ,"+!#{F1}")

NumpadAdd::tenkeyHotkey("obs64" ,"+!#{NumpadAdd}")

NumpadSub::tenkeyHotkey("obs64" ,"+!#{NumpadSub}")

NumpadMult::tenkeyHotkey("obs64" ,"+!#{NumpadMult}")

NumpadDiv::tenkeyHotkey("obs64" ,"+!#{NumpadDiv}")

NumpadEnter::tenkeyHotkey("obs64" ,"+!#{NumpadEnter}")

#If

/*サブルーチン-------------------------
---------------------------------------
---------------------------------------
*/
; 一瞬アクティブ化してからキーを送信し、非アクティブ化する関数
;例)obsは非アクティブ状態で反応しない
tenkeyHotkey(appName ,sendKey)
{
  #WinActivateForce  ;強制アクティブ化
  WinGetTitle, oldTitle, A  ;現在アクティブなウィンドウを記憶
  WinActivate, ahk_exe %appName%.exe  ;対象アプリをアクティブ化

  ;OBSアクティブまで待機
  WinGet, appID, ID, ahk_exe %appName%.exe  ;対象アプリのID取得
  oldTime := A_TickCount
  While (true)
  {
  WinGet, activeID,ID, A
  If (appID == activeID)
    Break

  ; 一応タイムアウト設定
  If (A_TickCount - oldTime > 3000)
    Break
  }

  Sleep, 50
  Send, %sendKey%  ;ホットキーを送信
  Sleep, 50
  WinActivate, %oldTitle%  ;記憶したウィンドウを再度アクティブ化
}


; 最初のテキストフィールドに移動[Chromium]
#If, WinActive("ahk_exe chrome.exe")
  ^+u::
    ; ホールド対策
    KeyWait, Ctrl
    KeyWait, Shift
    stash := ClipBoardAll
    ClipBoard := "const element=document.querySelector(""input[type='text'],input[type='search']"");element.select();element.scrollIntoView();"
    ClipWait, 1
    Send, ^l
    ; "javascript:"は貼り付けできない
    Send, {vkF2}{vkF3}javascript:
    Sleep, 100
    Send, ^v
    Sleep, 100
    Send, {Enter}
    Sleep, 10
    ClipBoard := stash
    stash := ""
  Return
#If
